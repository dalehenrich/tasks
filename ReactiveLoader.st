Object subclass: #ReactiveLoader	instanceVariableNames: ''	classVariableNames: ''	poolDictionaries: ''	category: 'ReactiveLoader'!!ReactiveLoader commentStamp: '<historical>' prior: 0!!"-- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- -- "!ReactiveLoader class	instanceVariableNames: ''!!ReactiveLoader class commentStamp: '<historical>' prior: 0!!!ReactiveLoader class methodsFor: 'actions' stamp: 'sebastiansastre 3/16/2013 06:11'!cleanUpForProduction	Smalltalk globals		at: #ScriptLoader		ifPresent: [ :class | 			class clearUpForProduction] ! !!ReactiveLoader class methodsFor: 'actions' stamp: 'sebastiansastre 6/27/2014 21:56'!loadRequisites	Gofer new		url: 'http://ss3.gemstone.com/ss/FileTree';		package: 'ConfigurationOfFileTree';		load.	((Smalltalk at: #ConfigurationOfFileTree) project version: #'stable') load.	Gofer it		url: 'http://mc.stfx.eu/ZincHTTPComponents';		package: 'ConfigurationOfZincHTTPComponents';		load.	(Smalltalk at:#ConfigurationOfZincHTTPComponents) project latestVersion load: 'SSO'.	(Smalltalk at:#ConfigurationOfZincHTTPComponents) project latestVersion load: 'WebSocket'. 	Gofer it		url: 'http://mc.stfx.eu/Zodiac';		package: 'Zodiac-Core';		package: 'Zodiac-Tests';		load.			Gofer it		url: 'http://smalltalkhub.com/mc/PharoExtras/JSON/main';		"url: 'http://www.squeaksource.com/JSON';"		package: 'JSON';		load.		Gofer new		squeaksource: 'XMLSupport'; 		package: 'ConfigurationOfXMLSupport';		load.	(Smalltalk at: #ConfigurationOfXMLSupport) perform: #loadDefault.	Gofer new		squeaksource: 'htmlcssparser';		package: 'HTML';		load. 		Gofer new		url: 'http://smalltalkhub.com/mc/PharoExtras/RFB/main';		package: 'ConfigurationOfRFB';		load.		(Smalltalk at: #ConfigurationOfRFB) load.	Gofer it 	    smalltalkhubUser: 'Pharo'	    project: 'MetaRepoForPharo30'; 	    package: 'ConfigurationOfMapless';	    load.	(Smalltalk at: #ConfigurationOfMapless) load.	Gofer it		url: 'http://ss3.gemstone.com/ss/SASExtensions';		package: 'ConfigurationFiles';		"package: 'FilesystemExtensions';"		package: 'pharoDurationPatch';		package: 'XMLPatch';		package: 'ZincPatch';		package: 'rfb-patch';		load.		Gofer it		url: 'http://ss3.gemstone.com/ss/Flow';		package: 'Flow';		load.			! !!ReactiveLoader class methodsFor: 'actions' stamp: 'sebastiansastre 6/27/2014 16:08'!load 	self loadRequisites.	self loadInHouseCode.	self onAfterLoad! !!ReactiveLoader class methodsFor: 'actions' stamp: 'sebastiansastre 10/26/2013 18:23'!onAfterLoad		Reactive start.	Smalltalk addToStartUpList: Reactive.	Smalltalk addToShutDownList: Reactive.	! !!ReactiveLoader class methodsFor: 'actions' stamp: 'sebastiansastre 6/27/2014 20:49'!setupServer	Flow isProduction ifFalse:[ 		ZnServer default delegate				addHandler: FlowJsCodeHandler new;			addHandler: FlowStCodeHandler new;			yourself].	(ZnServer managedServers detect:[:e|		e port = (ConfigurationFiles at: 'Reactive' at: 'websocketOn')]) 			delegate: (FlowWebSocketDelegate new						addHandler: ReactiveWebSocketsAPI new;						yourself).			ZnServer default delegate			addHandler: ReactiveAPIHandler new;		addHandler: (FlowFilesHandler for: (FileLocator imageDirectory / 'service') resolve fullName base: 'service');		yourself.	! !!ReactiveLoader class methodsFor: 'actions' stamp: 'sebastiansastre 6/27/2014 16:04'!loadInHouseCode	| gofer |	gofer := Gofer new		repository: (MCFileTreeRepository new					directory: self localSourceDirectory					yourself);		yourself.	self inHousePackageNames do:[:packageName|		gofer package: packageName].					gofer load! !!ReactiveLoader class methodsFor: 'initialization' stamp: 'sebastiansastre 6/27/2014 16:08'!initialize	self load! !!ReactiveLoader class methodsFor: 'accessing' stamp: 'sebastiansastre 10/18/2013 09:54'!classes	| all |		all := OrderedCollection new.		(self inHousePackageNames collect:[:each| 		(MCPackage named: each) packageSet]) do:[:e|			all addAll: e classes].			^ all! !!ReactiveLoader class methodsFor: 'accessing' stamp: 'sebastiansastre 6/27/2014 16:02'!inHousePackageNames	^ #(	Reactive	MTAClient		)! !!ReactiveLoader class methodsFor: 'accessing' stamp: 'sebastiansastre 3/16/2013 06:11'!methods	| all |		all := OrderedCollection new.		self classes do:[:each| 		all addAll: each methodDictionary values].			^ all! !!ReactiveLoader class methodsFor: 'accessing' stamp: 'sebastiansastre 10/18/2013 12:16'!localSourceDirectory			^ FileLocator imageDirectory / 'src'! !!ReactiveLoader class methodsFor: 'accessing' stamp: 'sebastiansastre 3/16/2013 06:11'!classMethods	| all |		all := OrderedCollection new.		self classes do:[:each| 		all addAll: each class methodDictionary values].			^ all! !!ReactiveLoader class methodsFor: 'testing' stamp: 'sebastiansastre 3/16/2013 06:11'!isInLaptop	^ OSPlatform isMacOS! !ReactiveLoader initialize!